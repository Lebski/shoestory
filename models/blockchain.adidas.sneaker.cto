/**
 * Sample business network definition.
 */
namespace org.acme.sample

// Duh!
enum Gender {
  o FEMALE
  o MALE
  o UNISEX
}

// Shoe lifecycle
enum ShoeStatus {
  o DESIGNED
  o PLASTIC_COLLECTED
  o MANUFACTURED
  o SOLD
  o AT_EVENT
  o NO_EVENT
  o RECYCLED
}

// What makes up a shoe
concept ShoeAttributes {
  o DateTime creationDate // Just month and year are read from NFC
  o String color
  o String gender
  o Integer sizeUS
  o Design design
  // optionals
  o Integer sizeUK optional
  o Integer sizeFR optional
  o Integer sizeJP optional
  o Integer sizeCHN optional
}

// Each shoe's model
concept Design {
  o String designedDate
  o String name
  o String designer
}


// Abstract Co.
abstract participant Company identified by companyId {
  o String companyId
}

// The asset that we keep track on the ledger
asset Sneaker identified by sneakerId {
  o String sneakerId
  o ShoeAttributes attributes
  o Owner[] ownerHistory
  o Owner currentOwner
  o Integer pointLeader
  o ShoeStatus status
  --> Contract contract
}

// An abstract participant
abstract participant Person identified by name {
  o String name
  o String lastname
  o Double account
}

// A shoe owner is a participant
participant Owner extends Person {
  o String sneakerId
}

// Rewards that the shoe gives to participants
transaction ShoeReward {
  o Double newValue
}

// Events, e.g. going to a club/adidas store
event ShoeEvent {
  o String oldValue
  o String newValue
}


// TRANSACTIONS
abstract transaction Trans {
  --> Sneaker sneaker
}
// Create a new design
transaction CreateDesign extends Trans{
}
// Plastic collection
transaction MaterialCollection extends Trans {
}
// Manufacturing
transaction Manufacture extends Trans {
}
// Sell a shoe (retail or re-sell)
transaction SellShoe extends Trans {
  o Owner buyer
  o Double price
}
// Checkpoint event (clubs, store)
transaction LoginAtLocation extends Trans {
}
transaction LogOutFromLocation extends Trans {
}
// Recycling
transaction Recycle extends Trans {
}

// Contract
asset Contract identified by contractId{
  o String contractId
}

// JUST FOR INITIALIZING A DEMO
transaction SetupDemo {
  o String test
}